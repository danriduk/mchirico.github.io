<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" 
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
    xmlns:admin="http://webns.net/mvcb/"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">
	<channel>
<title>My RSS Feed</title><link>https://mchirico.appspot.com/index.html</link><description>Hot News&#x21;</description><dc:language>en</dc:language><dc:rights>Copyright 2015&#x2c; Mike Chirico</dc:rights><dc:date>2016-02-18T18:45:09-05:00</dc:date><admin:generatorAgent rdf:resource="http://www.realmacsoftware.com/" />
<sy:updatePeriod>hourly</sy:updatePeriod>
<sy:updateFrequency>1</sy:updateFrequency>
<sy:updateBase>2000-01-01T12:00+00:00</sy:updateBase>
<lastBuildDate>Thu, 18 Feb 2016 18:47:06 -0500</lastBuildDate><item><title>More Montco</title><dc:subject>Blog</dc:subject><dc:date>2016-02-18T18:45:09-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/3060a881f5eb3b14b0848ff47c3fe7b8-30.html#unique-entry-id-30</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/3060a881f5eb3b14b0848ff47c3fe7b8-30.html#unique-entry-id-30</guid><content:encoded><![CDATA[Seems like all I do is work on this site&hellip;.okay, there are a lot of cool features for analyzing this data. But, it's a lot of time spent on the icons, etc.<br /><br /><iframe width=800 height=450 frameborder='0' style="border:0" src="https://storage.googleapis.com/montco-stats/live.html" allowfullscreen></iframe>]]></content:encoded></item><item><title>Tribute</title><dc:subject>Blog</dc:subject><dc:date>2016-02-15T13:07:26-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/ef50b7a2a4bb5a0b093c0874d6fa33b3-29.html#unique-entry-id-29</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/ef50b7a2a4bb5a0b093c0874d6fa33b3-29.html#unique-entry-id-29</guid><content:encoded><![CDATA[<span style="font:11px Menlo-Regular; ">Nice tribute by Brian Mulcahy, to a friend that passed away&hellip;<br /><br /></span><img class="imageStyle" alt="Screenshot 2016-02-15 13.07.02" src="https:/mchirico.appspot.com/styled-3/blog/files/screenshot-2016-02-15-13.07.02.png" width="546" height="929" /><br /><br />]]></content:encoded></item><item><title>Vomit -- more pandas</title><dc:subject>Blog</dc:subject><dc:date>2016-02-14T13:57:09-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/b0d0d809a0f0687d6543059ca69f23e8-28.html#unique-entry-id-28</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/b0d0d809a0f0687d6543059ca69f23e8-28.html#unique-entry-id-28</guid><content:encoded><![CDATA[<span style="font:11px Menlo-Regular; ">I spent the day working on charting auto accidents and calls to 911 for vomiting. Ugh, seems like unless amount of time trying to get the format correct..<br /><br /><br /><br /></span><img class="imageStyle" alt="Screenshot 2016-02-14 14.03.29" src="https:/mchirico.appspot.com/styled-3/blog/files/screenshot-2016-02-14-14.03.29.png" width="586" height="432" /><span style="font:11px Menlo-Regular; "><br /></span><span style="font:11px Menlo-Regular; "><br /><br /><br /><br /><pre><code class="python"><br /></span><span style="font:11px Menlo-Regular; color:#007400;">#!/usr/bin/env python</span><span style="font:11px Menlo-Regular; "><br /></span><span style="font:11px Menlo-Regular; color:#C41915;">"""<br />import matplotlib<br />matplotlib.use('Agg')<br /><br /><br /><br />"""</span><span style="font:11px Menlo-Regular; "><br /></span><span style="font:11px Menlo-Regular; color:#AA0D91;">import</span><span style="font:11px Menlo-Regular; "> requests<br /></span><span style="font:11px Menlo-Regular; color:#AA0D91;">import</span><span style="font:11px Menlo-Regular; "> pandas </span><span style="font:11px Menlo-Regular; color:#AA0D91;">as</span><span style="font:11px Menlo-Regular; "> pd<br /></span><span style="font:11px Menlo-Regular; color:#AA0D91;">import</span><span style="font:11px Menlo-Regular; "> matplotlib<br />matplotlib.use(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'Agg'</span><span style="font:11px Menlo-Regular; ">)<br /></span><span style="font:11px Menlo-Regular; color:#AA0D91;">import</span><span style="font:11px Menlo-Regular; "> matplotlib.pyplot </span><span style="font:11px Menlo-Regular; color:#AA0D91;">as</span><span style="font:11px Menlo-Regular; "> plt<br /></span><span style="font:11px Menlo-Regular; color:#AA0D91;">import</span><span style="font:11px Menlo-Regular; "> io<br /></span><span style="font:11px Menlo-Regular; color:#AA0D91;">import</span><span style="font:11px Menlo-Regular; "> numpy </span><span style="font:11px Menlo-Regular; color:#AA0D91;">as</span><span style="font:11px Menlo-Regular; "> np<br /></span><span style="font:11px Menlo-Regular; color:#AA0D91;">import</span><span style="font:11px Menlo-Regular; "> datetime<br /><br /></span><span style="font:11px Menlo-Regular; color:#007400;"># Read in the data</span><span style="font:11px Menlo-Regular; "><br />url=</span><span style="font:11px Menlo-Regular; color:#C41915;">"https://storage.googleapis.com/montco-stats/tz.csv"</span><span style="font:11px Menlo-Regular; "><br />d=requests.get(url).content<br />d=pd.read_csv(io.StringIO(d.decode(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'utf-8'</span><span style="font:11px Menlo-Regular; ">)))<br />d=pd.DataFrame(d)<br /><br /></span><span style="font:11px Menlo-Regular; color:#007400;"># Set index</span><span style="font:11px Menlo-Regular; "><br />d.index = pd.DatetimeIndex(d.timeStamp)<br /><br /><br /><br />ax = plt.subplot(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">111</span><span style="font:11px Menlo-Regular; ">)<br />ax.spines[</span><span style="font:11px Menlo-Regular; color:#C41915;">"top"</span><span style="font:11px Menlo-Regular; ">].set_visible(False)<br />ax.spines[</span><span style="font:11px Menlo-Regular; color:#C41915;">"bottom"</span><span style="font:11px Menlo-Regular; ">].set_visible(False)<br />ax.spines[</span><span style="font:11px Menlo-Regular; color:#C41915;">"right"</span><span style="font:11px Menlo-Regular; ">].set_visible(False)<br />ax.spines[</span><span style="font:11px Menlo-Regular; color:#C41915;">"left"</span><span style="font:11px Menlo-Regular; ">].set_visible(False)<br /><br /><br /><br /></span><span style="font:11px Menlo-Regular; color:#007400;"># Ensure that the axis ticks only show up on the bottom and left of the plot.</span><span style="font:11px Menlo-Regular; "><br /></span><span style="font:11px Menlo-Regular; color:#007400;"># Ticks on the right and top of the plot are generally unnecessary chartjunk.</span><span style="font:11px Menlo-Regular; "><br />ax.get_xaxis().tick_bottom()<br />ax.get_yaxis().tick_left()<br />ax.spines[</span><span style="font:11px Menlo-Regular; color:#C41915;">"top"</span><span style="font:11px Menlo-Regular; ">].set_visible(False)<br />ax.spines[</span><span style="font:11px Menlo-Regular; color:#C41915;">"bottom"</span><span style="font:11px Menlo-Regular; ">].set_visible(False)<br />ax.spines[</span><span style="font:11px Menlo-Regular; color:#C41915;">"right"</span><span style="font:11px Menlo-Regular; ">].set_visible(False)<br />ax.spines[</span><span style="font:11px Menlo-Regular; color:#C41915;">"left"</span><span style="font:11px Menlo-Regular; ">].set_visible(False)<br />ax.get_xaxis().tick_bottom()<br />ax.get_yaxis().tick_left()<br />plt.xticks(fontsize=</span><span style="font:11px Menlo-Regular; color:#1C00CF;">8</span><span style="font:11px Menlo-Regular; ">)<br />plt.yticks(fontsize=</span><span style="font:11px Menlo-Regular; color:#1C00CF;">7</span><span style="font:11px Menlo-Regular; ">)<br /><br /><br /><br /></span><span style="font:11px Menlo-Regular; color:#AA0D91;">def</span><span style="font:11px Menlo-Regular; "> createPivot(hr=</span><span style="font:11px Menlo-Regular; color:#1C00CF;">24</span><span style="font:11px Menlo-Regular; ">):<br />  d.timeStamp=pd.DatetimeIndex(d.timeStamp)<br />  t24=datetime.datetime.now() - datetime.timedelta(hours=hr)<br />  tz=d[(d.timeStamp >= t24)]<br />  g = tz.groupby([</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'title'</span><span style="font:11px Menlo-Regular; ">]).agg({</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'e'</span><span style="font:11px Menlo-Regular; ">:sum})<br />  h=g.sort_values(by=</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'e'</span><span style="font:11px Menlo-Regular; ">,ascending=False).head(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">2</span><span style="font:11px Menlo-Regular; ">)[</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'e'</span><span style="font:11px Menlo-Regular; ">].to_dict()<br />  tz=tz[tz[</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'title'</span><span style="font:11px Menlo-Regular; ">].isin(h.keys())]<br />  p=pd.pivot_table(tz, values=</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'e'</span><span style="font:11px Menlo-Regular; ">, index=[</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'timeStamp'</span><span style="font:11px Menlo-Regular; ">], columns=[</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'title'</span><span style="font:11px Menlo-Regular; ">], aggfunc=np.sum)<br />  p.fillna(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">0</span><span style="font:11px Menlo-Regular; ">, inplace=True)<br />  j=p.resample(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'24H'</span><span style="font:11px Menlo-Regular; ">,how=</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'sum'</span><span style="font:11px Menlo-Regular; ">)  <br />  j.fillna(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">0</span><span style="font:11px Menlo-Regular; ">, inplace=True)<br /></span><span style="font:11px Menlo-Regular; color:#007400;">#  j.index=j.index-pd.offsets.Hour(j.index.min().hour) - pd.offsets.Minute(j.index.min().minute) -pd.offsets.Second(j.index.min().second)</span><span style="font:11px Menlo-Regular; "><br /></span><span style="font:11px Menlo-Regular; color:#007400;">#  j.to_csv(file,index=True,header=True)</span><span style="font:11px Menlo-Regular; "><br />  j.to_csv(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'j.csv'</span><span style="font:11px Menlo-Regular; ">,index=True,header=True)<br />  jj=pd.read_csv(</span><span style="font:11px Menlo-Regular; color:#C41915;">"./j.csv"</span><span style="font:11px Menlo-Regular; ">)<br />  </span><span style="font:11px Menlo-Regular; color:#AA0D91;">return</span><span style="font:11px Menlo-Regular; "> (jj,j)<br /><br />(j,gj)=createPivot(hr=</span><span style="font:11px Menlo-Regular; color:#1C00CF;">1000</span><span style="font:11px Menlo-Regular; ">)<br /><br /></span><span style="font:11px Menlo-Regular; color:#007400;"># These are the "Tableau 20" colors as RGB.  </span><span style="font:11px Menlo-Regular; "><br />tableau20 = [(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">31</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">119</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">180</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">174</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">199</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">232</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">255</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">127</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">14</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">255</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">187</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">120</span><span style="font:11px Menlo-Regular; ">),  <br />             (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">44</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">160</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">44</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">152</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">223</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">138</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">214</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">39</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">40</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">255</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">152</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">150</span><span style="font:11px Menlo-Regular; ">),  <br />             (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">148</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">103</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">189</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">197</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">176</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">213</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">140</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">86</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">75</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">196</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">156</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">148</span><span style="font:11px Menlo-Regular; ">),  <br />             (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">227</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">119</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">194</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">247</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">182</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">210</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">127</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">127</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">127</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">199</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">199</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">199</span><span style="font:11px Menlo-Regular; ">),  <br />             (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">188</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">189</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">34</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">219</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">219</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">141</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">23</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">190</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">207</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">158</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">218</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">229</span><span style="font:11px Menlo-Regular; ">)]<br />tableau20 = [(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">0</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">255</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">0</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">174</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">199</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">232</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">255</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">127</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">14</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">255</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">187</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">120</span><span style="font:11px Menlo-Regular; ">),  <br />             (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">44</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">160</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">44</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">152</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">223</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">138</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">214</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">39</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">40</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">255</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">152</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">150</span><span style="font:11px Menlo-Regular; ">),  <br />             (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">148</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">103</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">189</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">197</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">176</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">213</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">140</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">86</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">75</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">196</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">156</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">148</span><span style="font:11px Menlo-Regular; ">),  <br />             (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">227</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">119</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">194</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">247</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">182</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">210</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">127</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">127</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">127</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">199</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">199</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">199</span><span style="font:11px Menlo-Regular; ">),  <br />             (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">188</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">189</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">34</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">219</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">219</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">141</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">23</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">190</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">207</span><span style="font:11px Menlo-Regular; ">), (</span><span style="font:11px Menlo-Regular; color:#1C00CF;">158</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">218</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">229</span><span style="font:11px Menlo-Regular; ">)]  <br /><br /></span><span style="font:11px Menlo-Regular; color:#007400;"># Scale the RGB values to the [0, 1] range, which is the format matplotlib accepts.  </span><span style="font:11px Menlo-Regular; "><br /></span><span style="font:11px Menlo-Regular; color:#AA0D91;">for</span><span style="font:11px Menlo-Regular; "> i </span><span style="font:11px Menlo-Regular; color:#AA0D91;">in</span><span style="font:11px Menlo-Regular; "> range(len(tableau20)):  <br />    r, g, b = tableau20[i]  <br />    tableau20[i] = (r / </span><span style="font:11px Menlo-Regular; color:#1C00CF;">255.</span><span style="font:11px Menlo-Regular; ">, g / </span><span style="font:11px Menlo-Regular; color:#1C00CF;">255.</span><span style="font:11px Menlo-Regular; ">, b / </span><span style="font:11px Menlo-Regular; color:#1C00CF;">255.</span><span style="font:11px Menlo-Regular; ">)  <br /><br /></span><span style="font:11px Menlo-Regular; color:#AA0D91;">def</span><span style="font:11px Menlo-Regular; "> fixTime(x):<br />    </span><span style="font:11px Menlo-Regular; color:#AA0D91;">try</span><span style="font:11px Menlo-Regular; ">:<br />        </span><span style="font:11px Menlo-Regular; color:#AA0D91;">return</span><span style="font:11px Menlo-Regular; "> datetime.datetime.strptime(x,</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'%Y-%m-%d %H:%M:%S'</span><span style="font:11px Menlo-Regular; ">)<br />    </span><span style="font:11px Menlo-Regular; color:#AA0D91;">except</span><span style="font:11px Menlo-Regular; ">:<br />        </span><span style="font:11px Menlo-Regular; color:#AA0D91;">return</span><span style="font:11px Menlo-Regular; "> datetime.datetime.strptime(x,</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'%Y-%m-%d'</span><span style="font:11px Menlo-Regular; ">)<br /></span><span style="font:11px Menlo-Regular; color:#007400;">#    return int(datetime.datetime.strptime(x,'%Y-%m-%d %H:%M:%S').hour)</span><span style="font:11px Menlo-Regular; "><br /><br /><br /><br />tics=[</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'ro'</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">'bs'</span><span style="font:11px Menlo-Regular; ">, </span><span style="font:11px Menlo-Regular; color:#1C00CF;">'g^'</span><span style="font:11px Menlo-Regular; ">,</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'ro'</span><span style="font:11px Menlo-Regular; ">,</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'bo'</span><span style="font:11px Menlo-Regular; ">,</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'yo'</span><span style="font:11px Menlo-Regular; ">,</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'r^'</span><span style="font:11px Menlo-Regular; ">,</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'b--'</span><span style="font:11px Menlo-Regular; ">,</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'g--'</span><span style="font:11px Menlo-Regular; ">]<br /><br /><br />timeHrs=[fixTime(x) </span><span style="font:11px Menlo-Regular; color:#AA0D91;">for</span><span style="font:11px Menlo-Regular; "> x </span><span style="font:11px Menlo-Regular; color:#AA0D91;">in</span><span style="font:11px Menlo-Regular; "> j.timeStamp.values]<br />rank=</span><span style="font:11px Menlo-Regular; color:#1C00CF;">0</span><span style="font:11px Menlo-Regular; ">    <br /></span><span style="font:11px Menlo-Regular; color:#AA0D91;">for</span><span style="font:11px Menlo-Regular; "> col </span><span style="font:11px Menlo-Regular; color:#AA0D91;">in</span><span style="font:11px Menlo-Regular; "> list(j.columns)[</span><span style="font:11px Menlo-Regular; color:#1C00CF;">1</span><span style="font:11px Menlo-Regular; ">::]:<br />    plt.plot(timeHrs,<br />             j[col].values,tics[rank],<br />             lw=</span><span style="font:11px Menlo-Regular; color:#1C00CF;">0.9</span><span style="font:11px Menlo-Regular; ">, color=tableau20[rank])<br />    rank+=</span><span style="font:11px Menlo-Regular; color:#1C00CF;">1</span><span style="font:11px Menlo-Regular; "><br />rank=</span><span style="font:11px Menlo-Regular; color:#1C00CF;">0</span><span style="font:11px Menlo-Regular; ">    <br /></span><span style="font:11px Menlo-Regular; color:#AA0D91;">for</span><span style="font:11px Menlo-Regular; "> col </span><span style="font:11px Menlo-Regular; color:#AA0D91;">in</span><span style="font:11px Menlo-Regular; "> list(j.columns)[</span><span style="font:11px Menlo-Regular; color:#1C00CF;">1</span><span style="font:11px Menlo-Regular; ">::]:<br />    plt.plot(timeHrs,<br />             j[col].values,<br />             lw=</span><span style="font:11px Menlo-Regular; color:#1C00CF;">0.9</span><span style="font:11px Menlo-Regular; ">, color=tableau20[rank])<br />    rank+=</span><span style="font:11px Menlo-Regular; color:#1C00CF;">1</span><span style="font:11px Menlo-Regular; ">    <br /></span><span style="font:11px Menlo-Regular; color:#007400;">#plt.savefig("junk.svg",format="svg", bbox_inches="tight")</span><span style="font:11px Menlo-Regular; "><br />plt.savefig(</span><span style="font:11px Menlo-Regular; color:#C41915;">"junk.png"</span><span style="font:11px Menlo-Regular; ">,format=</span><span style="font:11px Menlo-Regular; color:#C41915;">"png"</span><span style="font:11px Menlo-Regular; ">, bbox_inches=</span><span style="font:11px Menlo-Regular; color:#C41915;">"tight"</span><span style="font:11px Menlo-Regular; ">)<br /></code></pre><br /><br /><br />The plan was to get something anyone could download from Cloud9 and start analyzing the data.<br /><br /><pre><code class="python"><br /></span><span style="font:11px Menlo-Regular; color:#007400;">#!/usr/bin/env python</span><span style="font:11px Menlo-Regular; "><br /></span><span style="font:11px Menlo-Regular; color:#C41915;">"""<br />  src: https://github.com/mchirico/montcoalert/raw/master/src/python/vomit.py<br />   You can run this on cloud9<br />   wget https://github.com/mchirico/montcoalert/raw/master/src/python/vomit.py<br /><br />    Install Anaconda:<br />      <br />      Step 1:<br /><br />        Get the latest version of Anaconda2<br />         $ wget https://repo.continuum.io/archive/Anaconda2-2.5.0-Linux-x86_64.sh<br />         $ bash ./wget https://repo.continuum.io/archive/Anaconda2-2.5.0-Linux-x86_64.sh<br />  <br />  <br />"""</span><span style="font:11px Menlo-Regular; "><br /><br /></span><span style="font:11px Menlo-Regular; color:#AA0D91;">import</span><span style="font:11px Menlo-Regular; "> requests<br /></span><span style="font:11px Menlo-Regular; color:#AA0D91;">import</span><span style="font:11px Menlo-Regular; "> pandas </span><span style="font:11px Menlo-Regular; color:#AA0D91;">as</span><span style="font:11px Menlo-Regular; "> pd<br /></span><span style="font:11px Menlo-Regular; color:#AA0D91;">import</span><span style="font:11px Menlo-Regular; "> matplotlib.pyplot </span><span style="font:11px Menlo-Regular; color:#AA0D91;">as</span><span style="font:11px Menlo-Regular; "> plt<br /></span><span style="font:11px Menlo-Regular; color:#AA0D91;">import</span><span style="font:11px Menlo-Regular; "> io<br /></span><span style="font:11px Menlo-Regular; color:#AA0D91;">import</span><span style="font:11px Menlo-Regular; "> numpy </span><span style="font:11px Menlo-Regular; color:#AA0D91;">as</span><span style="font:11px Menlo-Regular; "> np<br /><br /></span><span style="font:11px Menlo-Regular; color:#007400;"># Read in the data</span><span style="font:11px Menlo-Regular; "><br />url=</span><span style="font:11px Menlo-Regular; color:#C41915;">"https://storage.googleapis.com/montco-stats/tz.csv"</span><span style="font:11px Menlo-Regular; "><br />d=requests.get(url).content<br />d=pd.read_csv(io.StringIO(d.decode(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'utf-8'</span><span style="font:11px Menlo-Regular; ">)))<br />d=pd.DataFrame(d)<br /><br /></span><span style="font:11px Menlo-Regular; color:#007400;"># Set index</span><span style="font:11px Menlo-Regular; "><br />d.index = pd.DatetimeIndex(d.timeStamp)<br /><br /></span><span style="font:11px Menlo-Regular; color:#007400;"># Take a look at just 'EMS: NAUSEA/VOMITING' for this year</span><span style="font:11px Menlo-Regular; "><br /></span><span style="font:11px Menlo-Regular; color:#007400;"># set to temporary variable tz</span><span style="font:11px Menlo-Regular; "><br />tz=d[(d.title == </span><span style="font:11px Menlo-Regular; color:#1C00CF;">'EMS: NAUSEA/VOMITING'</span><span style="font:11px Menlo-Regular; ">) & (d.timeStamp >= </span><span style="font:11px Menlo-Regular; color:#1C00CF;">'2016-01-01 00:00:00'</span><span style="font:11px Menlo-Regular; ">)]<br /><br /></span><span style="font:11px Menlo-Regular; color:#AA0D91;">print</span><span style="font:11px Menlo-Regular; "> tz.title.count()  </span><span style="font:11px Menlo-Regular; color:#007400;"># prints 187 currently</span><span style="font:11px Menlo-Regular; "><br /><br /></span><span style="font:11px Menlo-Regular; color:#007400;"># Group by just title</span><span style="font:11px Menlo-Regular; "><br />g = d.groupby([</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'title'</span><span style="font:11px Menlo-Regular; ">])<br /><br /></span><span style="font:11px Menlo-Regular; color:#007400;"># Look at the data every 100 hours. Note 60T = 1hr, 60*100=6000</span><span style="font:11px Menlo-Regular; "><br />kt100=g[</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'e'</span><span style="font:11px Menlo-Regular; ">].resample(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'6000T'</span><span style="font:11px Menlo-Regular; ">, how=[np.sum,np.mean,np.median, len])<br />kt100.fillna(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">0</span><span style="font:11px Menlo-Regular; ">, inplace=True)<br /><br /><br /></span><span style="font:11px Menlo-Regular; color:#007400;"># Write it out to .csv</span><span style="font:11px Menlo-Regular; "><br />vomit=kt100.ix[</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'EMS: NAUSEA/VOMITING'</span><span style="font:11px Menlo-Regular; ">][</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'sum'</span><span style="font:11px Menlo-Regular; ">]<br />vomit.to_csv(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'vomit100hr.csv'</span><span style="font:11px Menlo-Regular; ">,index=True,header=True)<br /><br /></span><span style="font:11px Menlo-Regular; color:#C41915;">"""<br />  This is what we see in vomit100hr.csv<br />  ...<br />  2016-01-29 00:00:00,23.0<br />  2016-02-02 04:00:00,15.0<br />  2016-02-06 08:00:00,26.0<br />  2016-02-10 12:00:00,17.0<br />  <br />  Note that the last entry will almost always be a lower<br />  sum, since it doesn't contain the full 100hrs.<br />  <br />"""</span><span style="font:11px Menlo-Regular; "><br /><br /></span><span style="font:11px Menlo-Regular; color:#007400;"># Let's look at every 50 hours... shorten the time</span><span style="font:11px Menlo-Regular; "><br />kt50=g[</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'e'</span><span style="font:11px Menlo-Regular; ">].resample(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'3000T'</span><span style="font:11px Menlo-Regular; ">, how=[np.sum,np.mean,np.median, len])<br />kt50.fillna(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">0</span><span style="font:11px Menlo-Regular; ">, inplace=True)<br /><br /><br /></span><span style="font:11px Menlo-Regular; color:#007400;"># Write it out to .csv</span><span style="font:11px Menlo-Regular; "><br />vomit50=kt50.ix[</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'EMS: NAUSEA/VOMITING'</span><span style="font:11px Menlo-Regular; ">][</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'sum'</span><span style="font:11px Menlo-Regular; ">]<br />vomit50.to_csv(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'vomit50hr.csv'</span><span style="font:11px Menlo-Regular; ">,index=True,header=True)<br /></span><span style="font:11px Menlo-Regular; color:#AA0D91;">print</span><span style="font:11px Menlo-Regular; "> vomit50.tail()<br /></span><span style="font:11px Menlo-Regular; color:#AA0D91;">print</span><span style="font:11px Menlo-Regular; "> </span><span style="font:11px Menlo-Regular; color:#C41915;">"\n\nStats on 50hr"</span><span style="font:11px Menlo-Regular; "><br /></span><span style="font:11px Menlo-Regular; color:#AA0D91;">print</span><span style="font:11px Menlo-Regular; "> </span><span style="font:11px Menlo-Regular; color:#C41915;">"Max: %d Mean:% 6.2f Median:% 6.2f"</span><span style="font:11px Menlo-Regular; "> % (vomit50.max(),vomit50.mean(),vomit50.median())<br />s=</span><span style="font:11px Menlo-Regular; color:#C41915;">"Quantiles: 25%,   50%,  75%,   90%    100%\n"</span><span style="font:11px Menlo-Regular; "><br />s+=</span><span style="font:11px Menlo-Regular; color:#C41915;">"         % 6.2f % 6.2f % 6.2f % 6.2f % 6.2f"</span><span style="font:11px Menlo-Regular; "> % (vomit50.quantile(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">0.25</span><span style="font:11px Menlo-Regular; ">),<br />                                             vomit50.quantile(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">0.50</span><span style="font:11px Menlo-Regular; ">),<br />                                                    vomit50.quantile(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">0.75</span><span style="font:11px Menlo-Regular; ">),<br />                                                    vomit50.quantile(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">0.9</span><span style="font:11px Menlo-Regular; ">),<br />                                                    vomit50.quantile(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">1</span><span style="font:11px Menlo-Regular; ">))<br /></span><span style="font:11px Menlo-Regular; color:#AA0D91;">print</span><span style="font:11px Menlo-Regular; "> s<br /><br /></span><span style="font:11px Menlo-Regular; color:#007400;">#  If you want to see the display</span><span style="font:11px Menlo-Regular; "><br /></span><span style="font:11px Menlo-Regular; color:#007400;">#  vomit50.plot()</span><span style="font:11px Menlo-Regular; "><br /></span><span style="font:11px Menlo-Regular; color:#007400;">#  plt.savefig('vomit50.png', bbox_inches='tight')</span><span style="font:11px Menlo-Regular; "><br /><br /></span><span style="font:11px Menlo-Regular; color:#C41915;">"""<br />  Now we get the following<br />  ...<br />  2016-02-04 06:00:00,7.0<br />  2016-02-06 08:00:00,6.0<br />  2016-02-08 10:00:00,20.0   <---- A slight spike<br />  2016-02-10 12:00:00,13.0<br />  2016-02-12 14:00:00,4.0<br />  <br />  Stats on 50hr<br />  Max: 20 Mean:  8.31 Median:  7.00<br />  Quantiles: 25%,   50%,  75%,   90%<br />             6.00   7.00  10.00  13.00<br />  <br />  <br />"""</span><span style="font:11px Menlo-Regular; "><br /><br /></span><span style="font:11px Menlo-Regular; color:#007400;"># Not using this</span><span style="font:11px Menlo-Regular; "><br /></span><span style="font:11px Menlo-Regular; color:#C41915;">"""<br /># Group by title and township<br />g = d.groupby(['title','twp'])<br /><br /># Look at the data every 100 hours. Note 60T = 1hr, 60*100=6000<br />k100=g['e'].resample('6000T', how=[np.sum,np.mean,np.median, len])<br />k100.fillna(0, inplace=True)<br />"""</span><span style="font:11px Menlo-Regular; "><br /><br /><br /><br /></span><span style="font:11px Menlo-Regular; color:#007400;"># Create pivot table</span><span style="font:11px Menlo-Regular; "><br /></span><span style="font:11px Menlo-Regular; color:#007400;"># Start with the group we want</span><span style="font:11px Menlo-Regular; "><br /></span><span style="font:11px Menlo-Regular; color:#007400;"># You need this for pivots</span><span style="font:11px Menlo-Regular; "><br />d.timeStamp=pd.DatetimeIndex(d.timeStamp)<br /><br /></span><span style="font:11px Menlo-Regular; color:#AA0D91;">def</span><span style="font:11px Menlo-Regular; "> createPivot(title=</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'EMS: NAUSEA/VOMITING'</span><span style="font:11px Menlo-Regular; ">,hr=</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'72H'</span><span style="font:11px Menlo-Regular; ">):<br />  d.timeStamp=pd.DatetimeIndex(d.timeStamp)<br />  tz=d[(d.title == title)]<br />  tz.index=pd.DatetimeIndex(tz.timeStamp)<br /></span><span style="font:11px Menlo-Regular; color:#007400;">#  tz[(tz.title=='EMS: ABDOMINAL PAINS') & (tz.twp=='CHELTENHAM')]</span><span style="font:11px Menlo-Regular; "><br />  p=pd.pivot_table(tz, values=</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'e'</span><span style="font:11px Menlo-Regular; ">, index=[</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'timeStamp'</span><span style="font:11px Menlo-Regular; ">], columns=[</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'twp'</span><span style="font:11px Menlo-Regular; ">], aggfunc=np.sum)<br />  </span><span style="font:11px Menlo-Regular; color:#007400;"># Make sure you don't do this</span><span style="font:11px Menlo-Regular; "><br />  </span><span style="font:11px Menlo-Regular; color:#007400;">#j=p.resample('4D',how='sum', fill_method='pad')</span><span style="font:11px Menlo-Regular; "><br />  j=p.resample(hr,how=</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'sum'</span><span style="font:11px Menlo-Regular; ">)<br />  j.fillna(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">0</span><span style="font:11px Menlo-Regular; ">, inplace=True)<br />  s=title.replace(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">' '</span><span style="font:11px Menlo-Regular; ">,</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'_'</span><span style="font:11px Menlo-Regular; ">).replace(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'/'</span><span style="font:11px Menlo-Regular; ">,</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'_'</span><span style="font:11px Menlo-Regular; ">).replace(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">' '</span><span style="font:11px Menlo-Regular; ">,</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'_'</span><span style="font:11px Menlo-Regular; ">).replace(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">':'</span><span style="font:11px Menlo-Regular; ">,</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'_'</span><span style="font:11px Menlo-Regular; ">)<br />  file=</span><span style="font:11px Menlo-Regular; color:#C41915;">"pivot%s.csv"</span><span style="font:11px Menlo-Regular; "> % (s)<br />  j.index=j.index-pd.offsets.Hour(j.index.min().hour) - pd.offsets.Minute(j.index.min().minute) -pd.offsets.Second(j.index.min().second)<br />  j.to_csv(file,index=True,header=True)<br /><br />createPivot(title=</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'EMS: NAUSEA/VOMITING'</span><span style="font:11px Menlo-Regular; ">,hr=</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'100H'</span><span style="font:11px Menlo-Regular; ">)<br />createPivot(title=</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'EMS: ABDOMINAL PAINS'</span><span style="font:11px Menlo-Regular; ">,hr=</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'100H'</span><span style="font:11px Menlo-Regular; ">)<br /><br /><br /></code></pre><br /></span>]]></content:encoded></item><item><title>Machine Learning Courses</title><dc:subject>Blog</dc:subject><dc:date>2016-02-03T22:12:07-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/f303c6149aa410dbe69d81c5eece1df1-27.html#unique-entry-id-27</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/f303c6149aa410dbe69d81c5eece1df1-27.html#unique-entry-id-27</guid><content:encoded><![CDATA[<span style="font:11px Menlo-Regular; "><br />Recommended reading list:<br /></span><span style="font:11px Menlo-Regular; "><a href="https://redd.it/1jeawf" rel="external">https://redd.it/1jeawf</a></span><span style="font:11px Menlo-Regular; "><br /><br /><br /><br /></span><a href="https://www.otexts.org/fpp/" rel="external"><img class="imageStyle" alt="Screenshot 2016-02-08 19.52.09" src="https:/mchirico.appspot.com/styled-3/blog/files/screenshot-2016-02-08-19.52.09.png" width="649" height="337" /></a><span style="font:11px Menlo-Regular; "><br /></span><span style="font:11px Menlo-Regular; "><br /><br /><br /><br /><br /></span><span style="font:11px Menlo-Regular; "><a href="https://www.coursera.org/learn/practical-machine-learning/lecture/HZKcr/cross-validation">https://www.coursera.org/learn/practical-machine-learning/lecture/HZKcr/cross-validation</a></span><span style="font:11px Menlo-Regular; "><br /><br /><br /></span><span style="font:15px Arial, Verdana, Helvetica, sans-serif; color:#535353;"><a href="http://golang.org/s/oracle-user-manual " rel="external">http://golang.org/s/oracle-user-manual</a></span><span style="font:12px Times-Roman; color:#000000;"><br /></span><span style="font:11px Menlo-Regular; "><br /><br /></span>]]></content:encoded></item><item><title>Traffic</title><dc:subject>Blog</dc:subject><dc:date>2016-01-30T20:32:13-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/569eb33a00f476abe0ccdb1038a54407-26.html#unique-entry-id-26</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/569eb33a00f476abe0ccdb1038a54407-26.html#unique-entry-id-26</guid><content:encoded><![CDATA[<span style="font:11px Menlo-Regular; ">Link to traffic </span><span style="font:11px Menlo-Regular; "><a href="https://www.google.com/fusiontables/embedviz?q=select+col0+from+1tnwsh9W0j1ArhGBqgwePVUDf8jWMmLK3abKgzu8d+where+col4+in+('EMS%3A+VEHICLE+FIRE'%2C+'EMS%3A+VEHICLE+ACCIDENT'%2C+'Fire%3A+VEHICLE+FIRE'%2C+'Fire%3A+VEHICLE+LEAKING+FUEL'%2C+'Traffic%3A+VEHICLE+ACCIDENT+-'%2C+'Traffic%3A+VEHICLE+FIRE+-'%2C+'Traffic%3A+VEHICLE+LEAKING+FUEL+-')&viz=MAP&h=false&lat=40.06565711262258&lng=-75.12500650685632&t=1&z=17&l=col0&y=3&tmplt=3&hml=TWO_COL_LAT_LNG" rel="external">map</a></span><span style="font:11px Menlo-Regular; "><br /><br /><br /></span>]]></content:encoded></item><item><title>Iris</title><dc:subject>Blog</dc:subject><dc:date>2016-01-20T17:56:34-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/e70c6d3f1fc12f2ad2c266c9a174e8e8-25.html#unique-entry-id-25</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/e70c6d3f1fc12f2ad2c266c9a174e8e8-25.html#unique-entry-id-25</guid><content:encoded><![CDATA[<span style="font:11px Menlo-Regular; ">Cool&hellip;.Kaggle has a page devoted to the Iris dataset<br /><br /></span><span style="font:11px Menlo-Regular; "><a href="https://www.kaggle.com/uciml/iris">https://www.kaggle.com/uciml/iris</a></span><span style="font:11px Menlo-Regular; "><br /><br />True, it's easy enough to get the data, however, it's nice to test out technologies on this dataset in a public area, for instructional purposes.</span>]]></content:encoded></item><item><title>Python</title><dc:subject>Blog</dc:subject><dc:date>2016-01-15T05:43:11-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/4cb40338bff392a9644706d980da0a4e-24.html#unique-entry-id-24</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/4cb40338bff392a9644706d980da0a4e-24.html#unique-entry-id-24</guid><content:encoded><![CDATA[<span style="font:11px Menlo-Regular; ">Good clean python resource:<br /></span><span style="font:11px Menlo-Regular; "><a href="http://cs231n.github.io/python-numpy-tutorial/#python-containers">http://cs231n.github.io/python-numpy-tutorial/#python-containers</a></span><span style="font:11px Menlo-Regular; "><br /><br /></span>]]></content:encoded></item><item><title>Pandas</title><category>Python</category><category>Pandas</category><dc:date>2016-01-08T15:14:23-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/48cb5c12ad881645cbffca5cfd6c99cb-23.html#unique-entry-id-23</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/48cb5c12ad881645cbffca5cfd6c99cb-23.html#unique-entry-id-23</guid><content:encoded><![CDATA[<span style="font:11px Menlo-Regular; ">I keep doing these simple things with data, over and over,<br />summarized, group, time series in Pandas&hellip;<br /><br /><pre><code class="python"><br /></span><span style="font:11px Menlo-Regular; color:#633720;">#!/usr/bin/env python</span><span style="font:11px Menlo-Regular; color:#FFFFFF;"><pre><code class="python"><br />#!/usr/bin/env python<br /></span><span style="font:11px Menlo-Regular; "><br />import pandas as pd<br />import datetime<br />import numpy as np<br /><br /></span><span style="font:11px Menlo-Regular; color:#AA0D91;">def getTZ():<br />    File='allEvents.csv'<br />    f=pd.read_csv(File,header=None,names=['lat', 'lng','desc','zip','title','timeStamp'],<br />       dtype={'lat':str,'lng':str,'desc':str,'zip':str,'title':str,'timeStamp':datetime.datetime})<br />    tz=pd.DataFrame(f)<br />    return tz<br /></span><span style="font:11px Menlo-Regular; "><br />tz=getTZ()<br />tz.index = pd.DatetimeIndex(tz.timeStamp)<br />def f(x):<br />    x=[i.strip() </span><span style="font:11px Menlo-Regular; color:#AA0D91;">for</span><span style="font:11px Menlo-Regular; "> i in x[</span><span style="font:11px Menlo-Regular; color:#1C00CF;">2</span><span style="font:11px Menlo-Regular; ">].split(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">';'</span><span style="font:11px Menlo-Regular; ">)]<br />    </span><span style="font:11px Menlo-Regular; color:#AA0D91;">return</span><span style="font:11px Menlo-Regular; "> x[</span><span style="font:11px Menlo-Regular; color:#1C00CF;">1</span><span style="font:11px Menlo-Regular; ">]<br /><br />tz[</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'twp'</span><span style="font:11px Menlo-Regular; ">]=tz.apply(f, axis=</span><span style="font:11px Menlo-Regular; color:#1C00CF;">1</span><span style="font:11px Menlo-Regular; ">)<br />tz[</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'e'</span><span style="font:11px Menlo-Regular; ">] = pd.Series(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">1</span><span style="font:11px Menlo-Regular; ">, index=tz.index)<br /></span><span style="font:11px Menlo-Regular; color:#633720;">#here<br /></span><span style="font:11px Menlo-Regular; "><br />g = tz.groupby([</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'title'</span><span style="font:11px Menlo-Regular; ">,</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'twp'</span><span style="font:11px Menlo-Regular; ">])<br />k=g[</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'e'</span><span style="font:11px Menlo-Regular; ">].resample(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'300T'</span><span style="font:11px Menlo-Regular; ">, how=[np.sum,np.mean,np.median, len])<br />k.to_csv(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'TitleTmp.csv'</span><span style="font:11px Menlo-Regular; ">)<br />tz.to_csv(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">'tz.csv'</span><span style="font:11px Menlo-Regular; ">, index = False)<br /><br /></code></pre><br /><br /></span>]]></content:encoded></item><item><title>Interesting playground ideas</title><dc:subject>Blog</dc:subject><dc:date>2016-01-04T11:23:31-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/9c098eb1eaf9b779693c940675fbe415-22.html#unique-entry-id-22</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/9c098eb1eaf9b779693c940675fbe415-22.html#unique-entry-id-22</guid><content:encoded><![CDATA[<span style="font:11px Menlo-Regular; ">Interesting playground ideas&hellip;<br /><br /></span>]]></content:encoded></item><item><title>Cheltenham Traffic Data</title><dc:subject>Blog</dc:subject><dc:date>2015-12-31T13:11:39-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/TrafficData%20.html#unique-entry-id-21</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/TrafficData%20.html#unique-entry-id-21</guid><content:encoded><![CDATA[<span style="font:11px Menlo-Regular; ">Cheltenham traffic data</span>]]></content:encoded></item><item><title>Swift</title><category>Swift</category><dc:date>2015-12-30T08:58:23-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/512469d26293b6f9f333e5c231cfa916-20.html#unique-entry-id-20</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/512469d26293b6f9f333e5c231cfa916-20.html#unique-entry-id-20</guid><content:encoded><![CDATA[<span style="font:11px Menlo-Regular; "><br />Playing around with custom operators&hellip; which seems to confuse the html formatter&hellip;<br /><br /><br /><br /><pre><code class="swift"><br /><br /><br />import UIKit<br /><br />infix operator |> { associativity left precedence 180 }<br /><br />func |>  (lhs: Int, rhs: Int) -> Int {<br />  <br />  return lhs+rhs<br />}<br /><br />class TestThis {<br /> <br />  func doTest() {<br />    print("This is a test")<br />    print(3 |> 12 |> 10)<br />  }<br />  <br />}<br /><br /><br /></code></pre><br /><br /><br /><br /><br />Code to figure out how many weeks in a month&hellip;<br /><br /><pre><code class="swift"><br /></span><span style="font:11px Menlo-Regular; color:#AA0D91;">func</span><span style="font:11px Menlo-Regular; "> weeksInMonth(month: </span><span style="font:11px Menlo-Regular; color:#5B2599;">Int</span><span style="font:11px Menlo-Regular; ">, year: </span><span style="font:11px Menlo-Regular; color:#5B2599;">Int</span><span style="font:11px Menlo-Regular; ">) -> (</span><span style="font:11px Menlo-Regular; color:#5B2599;">Int</span><span style="font:11px Menlo-Regular; ">)? {<br />  <br />  </span><span style="font:11px Menlo-Regular; color:#AA0D91;">let</span><span style="font:11px Menlo-Regular; "> calendar = </span><span style="font:11px Menlo-Regular; color:#5B2599;">NSCalendar</span><span style="font:11px Menlo-Regular; ">.</span><span style="font:11px Menlo-Regular; color:#2E0D6D;">currentCalendar</span><span style="font:11px Menlo-Regular; ">()<br />  <br />  </span><span style="font:11px Menlo-Regular; color:#AA0D91;">let</span><span style="font:11px Menlo-Regular; "> comps = </span><span style="font:11px Menlo-Regular; color:#5B2599;">NSDateComponents</span><span style="font:11px Menlo-Regular; ">()<br />  comps.</span><span style="font:11px Menlo-Regular; color:#5B2599;">month</span><span style="font:11px Menlo-Regular; "> = month+</span><span style="font:11px Menlo-Regular; color:#1C00CF;">1</span><span style="font:11px Menlo-Regular; "><br />  comps.</span><span style="font:11px Menlo-Regular; color:#5B2599;">year</span><span style="font:11px Menlo-Regular; "> = year<br />  comps.</span><span style="font:11px Menlo-Regular; color:#5B2599;">day</span><span style="font:11px Menlo-Regular; "> = </span><span style="font:11px Menlo-Regular; color:#1C00CF;">0</span><span style="font:11px Menlo-Regular; "><br /> <br />  </span><span style="font:11px Menlo-Regular; color:#AA0D91;">guard</span><span style="font:11px Menlo-Regular; "> </span><span style="font:11px Menlo-Regular; color:#AA0D91;">let</span><span style="font:11px Menlo-Regular; "> last = calendar.</span><span style="font:11px Menlo-Regular; color:#2E0D6D;">dateFromComponents</span><span style="font:11px Menlo-Regular; ">(comps) <br />   </span><span style="font:11px Menlo-Regular; color:#AA0D91;">else</span><span style="font:11px Menlo-Regular; "> {<br />      </span><span style="font:11px Menlo-Regular; color:#AA0D91;">return</span><span style="font:11px Menlo-Regular; "> </span><span style="font:11px Menlo-Regular; color:#AA0D91;">nil</span><span style="font:11px Menlo-Regular; "><br />        }<br />  <br />  </span><span style="font:11px Menlo-Regular; color:#AA0D91;">let</span><span style="font:11px Menlo-Regular; "> tag = calendar.</span><span style="font:11px Menlo-Regular; color:#2E0D6D;">components</span><span style="font:11px Menlo-Regular; ">([.WeekOfMonth,.WeekOfYear,<br />   .YearForWeekOfYear,.Weekday,.Quarter],    fromDate: last)<br />  <br />  </span><span style="font:11px Menlo-Regular; color:#AA0D91;">return</span><span style="font:11px Menlo-Regular; "> tag.</span><span style="font:11px Menlo-Regular; color:#5B2599;">weekOfMonth</span><span style="font:11px Menlo-Regular; "><br /><br />}<br /><br /></span><span style="font:11px Menlo-Regular; color:#AA0D91;">if</span><span style="font:11px Menlo-Regular; "> </span><span style="font:11px Menlo-Regular; color:#AA0D91;">let</span><span style="font:11px Menlo-Regular; "> numWeeks = </span><span style="font:11px Menlo-Regular; color:#25464B;">weeksInMonth</span><span style="font:11px Menlo-Regular; ">(</span><span style="font:11px Menlo-Regular; color:#1C00CF;">5</span><span style="font:11px Menlo-Regular; ">,year: </span><span style="font:11px Menlo-Regular; color:#1C00CF;">2015</span><span style="font:11px Menlo-Regular; ">) {<br />   </span><span style="font:11px Menlo-Regular; color:#2E0D6D;">print</span><span style="font:11px Menlo-Regular; ">(numWeeks)<br />}<br /><br /></code></pre><br /><br /><br /><br />Good swift reference<br /></span><span style="font:11px Menlo-Regular; "><a href="http://appventure.me/2015/10/24/swift-reflection-api-what-you-can-do/">http://appventure.me/2015/10/24/swift-reflection-api-what-you-can-do/</a></span><span style="font:11px Menlo-Regular; "><br /><br />NSCoding and Swift Structs<br /></span><span style="font:11px Menlo-Regular; "><a href="http://swiftandpainless.com/nscoding-and-swift-structs/">http://swiftandpainless.com/nscoding-and-swift-structs/</a></span><span style="font:11px Menlo-Regular; "><br /><br /><br /><br /><br />Good tutorial on creating a 3 node cluster<br /><br /></span><span style="font:11px Menlo-Regular; "><a href="https://cloud.google.com/container-engine/docs/tutorials/hello-node#step_3_create_your_cluster">https://cloud.google.com/container-engine/docs/tutorials/hello-node#step_3_create_your_cluster</a></span><span style="font:11px Menlo-Regular; "><br /><br />And, here's the more advanced one&hellip;<br /><br /></span><span style="font:11px Menlo-Regular; "><a href="https://cloud.google.com/container-engine/docs/tutorials/guestbook" rel="external">https://cloud.google.com/container-engine/docs/tutorials/guestbook</a></span><span style="font:11px Menlo-Regular; "><br /><br /><br /><br /></span>]]></content:encoded></item><item><title>Getting Messages from iMessages</title><dc:subject>Blog</dc:subject><dc:date>2015-12-21T15:48:18-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/a7de2acb7cff7fa8d17d26661fe4fc82-19.html#unique-entry-id-19</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/a7de2acb7cff7fa8d17d26661fe4fc82-19.html#unique-entry-id-19</guid><content:encoded><![CDATA[<span style="font:11px Menlo-Regular; ">You can read the messages from here&hellip;<br /><br /> ~/Library/Messages]$ sqlite3 chat.db<br /><br /></span>]]></content:encoded></item><item><title>GCM</title><dc:subject>Blog</dc:subject><dc:date>2015-12-20T18:15:55-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/1b69acbce25847b5f910ea96ab70ca76-18.html#unique-entry-id-18</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/1b69acbce25847b5f910ea96ab70ca76-18.html#unique-entry-id-18</guid><content:encoded><![CDATA[<span style="font:11px Menlo-Regular; ">Good reference:<br /><br /></span><span style="font:11px Menlo-Regular; "><a href="https://github.com/googlesamples/gcm-playground">https://github.com/googlesamples/gcm-playground</a></span><span style="font:11px Menlo-Regular; "><br /><br /></span>]]></content:encoded></item><item><title>Notification Handlers</title><dc:subject>Blog</dc:subject><dc:date>2015-12-19T17:31:28-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/64c253688994360b455fd97dc0267e42-17.html#unique-entry-id-17</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/64c253688994360b455fd97dc0267e42-17.html#unique-entry-id-17</guid><content:encoded><![CDATA[<span style="font:13px Arial, Verdana, Helvetica, sans-serif; color:#303030;"><br />I gotta remember this&hellip;<br /><br /></span><span style="font:11px Menlo-Regular; ">  </span><span style="font:11px Menlo-Regular; color:#5B2599;">NSNotificationCenter</span><span style="font:11px Menlo-Regular; ">.</span><span style="font:11px Menlo-Regular; color:#2E0D6D;">defaultCenter</span><span style="font:11px Menlo-Regular; ">().</span><span style="font:11px Menlo-Regular; color:#2E0D6D;">addObserver</span><span style="font:11px Menlo-Regular; ">(</span><span style="font:11px Menlo-Regular; color:#AA0D91;">self</span><span style="font:11px Menlo-Regular; ">, selector: </span><span style="font:11px Menlo-Regular; color:#C41915;">"handleOpenURL:"</span><span style="font:11px Menlo-Regular; ">, name:</span><span style="font:11px Menlo-Regular; color:#C41915;">"HANDLEOPENURL"</span><span style="font:11px Menlo-Regular; ">, object: </span><span style="font:11px Menlo-Regular; color:#AA0D91;">nil</span><span style="font:11px Menlo-Regular; ">)<br />    </span><span style="font:11px Menlo-Regular; color:#007400;">//   let delegate = UIApplication.sharedApplication().delegate as? AppDelegate<br /></span><span style="font:11px Menlo-Regular; ">    </span>]]></content:encoded></item><item><title>iOS Notes</title><dc:subject>Blog</dc:subject><dc:date>2015-12-18T14:20:55-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/21c051a67024ddcc011a64f8d78a36a5-16.html#unique-entry-id-16</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/21c051a67024ddcc011a64f8d78a36a5-16.html#unique-entry-id-16</guid><content:encoded><![CDATA[<br /><span style="font:13px Arial, Verdana, Helvetica, sans-serif; color:#303030;">&nbsp;<br />XCPShowView(_:view:) is deprecated. Set 'XCPlaygroundPage.liveView' instead.</span><span style="font:13px Arial, Verdana, Helvetica, sans-serif; color:#303030;"><br /><br /></span><span style="font:13px Arial, Verdana, Helvetica, sans-serif; color:#303030;">XCPShowView("Container View", view: containerView)</span><span style="font:13px Arial, Verdana, Helvetica, sans-serif; color:#303030;"><br /></span><span style="font:13px Arial, Verdana, Helvetica, sans-serif; color:#303030;">becomes:</span><span style="font:13px Arial, Verdana, Helvetica, sans-serif; color:#303030;"><br /></span><span style="font:13px Arial, Verdana, Helvetica, sans-serif; color:#303030;">XCPlaygroundPage.currentPage.liveView = containerView﻿<br /></span>]]></content:encoded></item><item><title>Google App Engine</title><dc:subject>Blog</dc:subject><dc:date>2015-12-10T14:29:45-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/4212c602c2c601e89b9e7080587bad7e-15.html#unique-entry-id-15</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/4212c602c2c601e89b9e7080587bad7e-15.html#unique-entry-id-15</guid><content:encoded><![CDATA[Reference for cron jobs:<br /><a href="https://cloud.google.com/appengine/docs/python/config/cron?hl=en#Python_app_yaml_About_cron_yaml">https://cloud.google.com/appengine/docs/python/config/cron?hl=en#Python_app_yaml_About_cron_yaml</a><br /><br />]]></content:encoded></item><item><title>Active EMS Incidences</title><dc:subject>Blog</dc:subject><dc:date>2015-12-04T21:06:05-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/94e27abd749513f798bec3cda17f85ec-14.html#unique-entry-id-14</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/94e27abd749513f798bec3cda17f85ec-14.html#unique-entry-id-14</guid><content:encoded><![CDATA[<a href="http://www.montcopa.org/index.aspx?NID=834" rel="external">http://www.montcopa.org/index.aspx?NID=834</a><br />]]></content:encoded></item><item><title>Cool Site Hackathons</title><dc:subject>Blog</dc:subject><dc:date>2015-12-02T22:15:05-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/3d43ed5df05b46f98f0f299b5f5c4d3e-13.html#unique-entry-id-13</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/3d43ed5df05b46f98f0f299b5f5c4d3e-13.html#unique-entry-id-13</guid><content:encoded><![CDATA[<br /><a href="http://devpost.com/hackathons">http://devpost.com/hackathons</a><br /><br />]]></content:encoded></item><item><title>Design Patterns in Swift</title><dc:subject>Blog</dc:subject><dc:date>2015-11-30T22:28:24-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/e4ac2edb6aec2215b112fbf8c2a4f7c8-12.html#unique-entry-id-12</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/e4ac2edb6aec2215b112fbf8c2a4f7c8-12.html#unique-entry-id-12</guid><content:encoded><![CDATA[<br /><br /><a href="https://github.com/ochococo/Design-Patterns-In-Swift#creational">https://github.com/ochococo/Design-Patterns-In-Swift#creational</a><br /><br />]]></content:encoded></item><item><title>Machine Learning References</title><dc:subject>Blog</dc:subject><dc:date>2015-11-24T08:45:57-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/dc9da4659e5afe93fe83dae228b23717-11.html#unique-entry-id-11</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/dc9da4659e5afe93fe83dae228b23717-11.html#unique-entry-id-11</guid><content:encoded><![CDATA[Lasso<br /><a href="http://web.stanford.edu/~hastie/Papers/B67.2%20%282005%29%20301-320%20Zou%20&%20Hastie.pdf">http://web.stanford.edu/~hastie/Papers/B67.2%20%282005%29%20301-320%20Zou%20&%20Hastie.pdf</a><br /><br /><br /><a href="http://www.cs.nyu.edu/~mohri/mlu/mlu_lecture_3.pdf">http://www.cs.nyu.edu/~mohri/mlu/mlu_lecture_3.pdf</a><br />	<br /><br /><br /><a href="http://colah.github.io/posts/2015-08-Understanding-LSTMs/">http://colah.github.io/posts/2015-08-Understanding-LSTMs/</a><br /><br /><br />Neural Network and Deep Learning<br /><a href="http://neuralnetworksanddeeplearning.com/">http://neuralnetworksanddeeplearning.com/</a><br /><br />Linear Algebra<br /><a href="https://www.math.ucdavis.edu/~linear/linear-guest.pdf">https://www.math.ucdavis.edu/~linear/linear-guest.pdf</a><br /><br />Andrew Ng<br /><a href="http://openclassroom.stanford.edu/MainFolder/CoursePage.php?course=MachineLearning" rel="external">http://openclassroom.stanford.edu/MainFolder/CoursePage.php?course=MachineLearning</a><br /><br /><br /><br /><br /><br /><a href="https://www.quora.com/What-are-the-top-10-data-mining-or-machine-learning-algorithms/answer/Xavier-Amatriain">https://www.quora.com/What-are-the-top-10-data-mining-or-machine-learning-algorithms/answer/Xavier-Amatriain</a><br /><br /><a href="https://www.quora.com/What-are-the-top-10-data-mining-or-machine-learning-algorithms/answer/Xavier-Amatriain" rel="external"><img class="imageStyle" alt="Screenshot 2015-11-27 09.06.47" src="https:/mchirico.appspot.com/styled-3/blog/files/screenshot-2015-11-27-09.06.47.png" width="760" height="571" /></a>]]></content:encoded></item><item><title>Playgrounds</title><dc:subject>Blog</dc:subject><dc:date>2015-11-22T18:37:08-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/85ce1e0ab9a5ba4549d2b2ba7e0dc618-10.html#unique-entry-id-10</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/85ce1e0ab9a5ba4549d2b2ba7e0dc618-10.html#unique-entry-id-10</guid><content:encoded><![CDATA[Playgrounds are kind of addictive&hellip;.<br /><br /><img class="imageStyle" alt="Screenshot 2015-11-22 18.36.47" src="https:/mchirico.appspot.com/styled-3/blog/files/screenshot-2015-11-22-18.36.47.png" width="1229" height="687" />]]></content:encoded></item><item><title>Protocols</title><dc:subject>Blog</dc:subject><dc:date>2015-11-19T09:53:13-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/608cb7502a87a96628a79e6aec2bda9d-9.html#unique-entry-id-9</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/608cb7502a87a96628a79e6aec2bda9d-9.html#unique-entry-id-9</guid><content:encoded><![CDATA[<br /><br />Good video on protocols<br /><a href="http://www.raywenderlich.com/116154/intermediate-swift-2-part-5-protocols">http://www.raywenderlich.com/116154/intermediate-swift-2-part-5-protocols</a><br /><br />]]></content:encoded></item><item><title>TableViews</title><dc:subject>Blog</dc:subject><dc:date>2015-11-17T21:57:45-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/d66130b8da3356fcf665dd42c0a9b32e-8.html#unique-entry-id-8</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/d66130b8da3356fcf665dd42c0a9b32e-8.html#unique-entry-id-8</guid><content:encoded><![CDATA[It's probably worth viewing the raywenderlich.com video's on tableviews:<br /><br /><a href="http://www.raywenderlich.com/119628/new-video-tutorial-series-table-views">http://www.raywenderlich.com/119628/new-video-tutorial-series-table-views</a><br /><br />]]></content:encoded></item><item><title>Swift Stuff</title><dc:subject>Blog</dc:subject><dc:date>2015-11-17T09:05:24-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/09b06926f288d493cbb7948450c3ba63-7.html#unique-entry-id-7</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/09b06926f288d493cbb7948450c3ba63-7.html#unique-entry-id-7</guid><content:encoded><![CDATA[Interesting note&hellip; dynamic dispatch happens automatically unless you declare a class or method final?<br /><br /><a href="https://developer.apple.com/swift/blog/?id=27">https://developer.apple.com/swift/blog/?id=27</a><br /><br /><br /><br /><script src="https://gist.github.com/mchirico/b9e7c8b861e8d334c1a3.js"></script><br />]]></content:encoded></item><item><title>TensorFlow</title><dc:subject>Blog</dc:subject><dc:date>2015-11-17T08:39:40-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/9a65db3bfef5a96350bca6cc54a64038-6.html#unique-entry-id-6</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/9a65db3bfef5a96350bca6cc54a64038-6.html#unique-entry-id-6</guid><content:encoded><![CDATA[<br />Softmax<br />http://cs229.stanford.edu/notes/cs229-notes1.pdf<br /><br /><br /><br />TensorFlow tutorials<br /><a href="https://github.com/nlintz/TensorFlow-Tutorials">https://github.com/nlintz/TensorFlow-Tutorials</a><br /><br /><br /><br /><script src="https://gist.github.com/mchirico/7277eb42a5c2e18cde11.js"></script>]]></content:encoded></item><item><title>Core Data</title><dc:subject>Blog</dc:subject><dc:date>2015-11-17T08:39:12-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/0e01abffa1fbe8c2203bbb50f7267444-5.html#unique-entry-id-5</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/0e01abffa1fbe8c2203bbb50f7267444-5.html#unique-entry-id-5</guid><content:encoded><![CDATA[Okay. Back to looking at core data in swift.<br /><br />Sometimes you just want a very quick way of adding and deleting core data&hellip;hmm, was certainly thinking of something a bit simpler. But, okay, this is evolving.<br /><br /><br /><br /><img class="imageStyle" alt="Screenshot 2015-11-17 22.00.53" src="https:/mchirico.appspot.com/styled-3/blog/files/screenshot-2015-11-17-22.00.53.png" width="576" height="215" /><br /><br /><br /><script src="https://gist.github.com/mchirico/239d20d26cbb9a853099.js"></script><br /><br /><br /><br /><br />This was the original. It's a bit simpler, and doesn't have all the attributes listed above.<br /><script src="https://gist.github.com/mchirico/e3f0d3c2bca72cf26aa7.js"></script><br /><br /><br /><br /><br />These are some really good tutorials<br /><br /><a href="http://www.raywenderlich.com/113995/video-tutorial-intermediate-core-data-part-1-core-data-stack">http://www.raywenderlich.com/113995/video-tutorial-intermediate-core-data-part-1-core-data-stack</a><br /><br />]]></content:encoded></item><item><title>Xcode 7.2 beta 3</title><dc:subject>Blog</dc:subject><dc:date>2015-11-16T21:11:45-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/ebda65dbffbc25a9e791153e41c3058d-4.html#unique-entry-id-4</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/ebda65dbffbc25a9e791153e41c3058d-4.html#unique-entry-id-4</guid><content:encoded><![CDATA[Looks like Xcode 7.2 beta 3 is out&hellip;downloading it.  It would be nice to setup this version as the backup, and Xcode 7.1.1<br />as the default application that gets loaded.  Yeah, I saw some postings on stack overflow; but, they don't seem to solve the problem.<br /><br /><br /><br />]]></content:encoded></item><item><title>Technical</title><category>Swift</category><dc:date>2015-11-14T07:59:10-05:00</dc:date><link>https://mchirico.appspot.com/styled-3/blog/files/1c6067ddd6e8d6f98b9a599d15ab1d0a-3.html#unique-entry-id-3</link><guid isPermaLink="true">https://mchirico.appspot.com/styled-3/blog/files/1c6067ddd6e8d6f98b9a599d15ab1d0a-3.html#unique-entry-id-3</guid><content:encoded><![CDATA[Beginning of the blog page&hellip;decided to go with RapidWeaver 6, even after being burned with the no backup option.]]></content:encoded></item></channel>
</rss>